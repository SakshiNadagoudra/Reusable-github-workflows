name: Build and Deploy Java Application

on:
  push:
    branches:
      - main # Trigger the pipeline when there is a push to the main branch (change to your branch if necessary)

jobs:
  deploy-and-test:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Deploy to Dev immediately when push occurs
      - name: Deploy to Dev
        uses: ./.github/workflows/reusable-deploy.yml
        with:
          environment: dev

      # Step 2: Test Dev Environment
      - name: Test Dev Environment
        uses: ./.github/workflows/reusable-test.yml
        with:
          environment: dev

      # Step 3: Notify and Wait for Approval to Proceed to SIT
      - name: Notify for SIT Approval
        run: |
          echo "Dev deployment completed and tested. Please approve or reject deployment to SIT."
      - name: Wait for SIT Approval
        run: |
          echo "Waiting for approval to proceed to SIT."
        # Using approval input for SIT. This is for simplicity. Approval happens in subsequent environments.
        # This will be replaced by a manual approval check or another mechanism.

      # Step 4: Deploy to SIT (only if Dev was approved)
      - name: Deploy to SIT
        if: ${{ github.event.inputs.approval == 'approved' }}
        uses: ./.github/workflows/reusable-deploy.yml
        with:
          environment: sit

      # Step 5: Test SIT Environment
      - name: Test SIT Environment
        if: ${{ github.event.inputs.approval == 'approved' }}
        uses: ./.github/workflows/reusable-test.yml
        with:
          environment: sit

      # Step 6: Notify for UAT Approval
      - name: Notify for UAT Approval
        run: |
          echo "SIT deployment completed and tested. Please approve or reject deployment to UAT."

      # Step 7: Wait for SIT Approval to UAT
      - name: Wait for SIT Approval
        run: |
          echo "Waiting for approval to proceed to UAT."

      # Step 8: Deploy to UAT (only if SIT was approved)
      - name: Deploy to UAT
        if: ${{ github.event.inputs.approval == 'approved' }}
        uses: ./.github/workflows/reusable-deploy.yml
        with:
          environment: uat

      # Step 9: Test UAT Environment
      - name: Test UAT Environment
        if: ${{ github.event.inputs.approval == 'approved' }}
        uses: ./.github/workflows/reusable-test.yml
        with:
          environment: uat

      # Step 10: Notify for Prod Approval
      - name: Notify for Prod Approval
        run: |
          echo "UAT deployment completed and tested. Please approve or reject deployment to Prod."

      # Step 11: Wait for UAT Approval to Prod
      - name: Wait for UAT Approval
        run: |
          echo "Waiting for approval to proceed to Prod."

      # Step 12: Deploy to Prod (only if UAT was approved)
      - name: Deploy to Prod
        if: ${{ github.event.inputs.approval == 'approved' }}
        uses: ./.github/workflows/reusable-deploy.yml
        with:
          environment: prod

      # Step 13: Test Prod Environment
      - name: Test Prod Environment
        if: ${{ github.event.inputs.approval == 'approved' }}
        uses: ./.github/workflows/reusable-test.yml
        with:
          environment: prod




  # # Stage 1: Build
  # build:
  #   name: Build Java Code
  #   runs-on: ubuntu-latest
  #   needs: run-on-merge
  #   steps: 
  #     - name: Checkout Code
  #       uses: actions/checkout@v3

  #     - name: Set up JDK
  #       uses: actions/setup-java@v3
  #       with:
  #         distribution: 'adopt'
  #         java-version: '11'

  #     - name: Build with Maven
  #       run: mvn clean install

  #     - name: Upload Build Artifacts
  #       uses: actions/upload-artifact@v3
  #       with:
  #         name: build-artifacts
  #         path: target/*.jar

  # # Stage 3: Deploy to Development
  # deploy-dev:
  #   name: Deploy to Dev Environment
  #   needs: build
  #   uses: SakshiNadagoudra/Reusable-github-workflows/.github/workflows/reusable-deploy.yml@main # Reference the reusable workflow
  #   with:
  #     environment: dev  # Pass the environment name to the reusable workflow

  # test-sit:
  #   name: Test in SIT
  #   needs: deploy-dev
  #   uses: SakshiNadagoudra/Reusable-github-workflows/.github/workflows/reusable-test.yml@main
  #   with:
  #     environment: sit

  # # Stage 3: Deploy to Development
  # deploy-sit:
  #   name: Deploy to Sit Environment
  #   needs: test-sit
  #   uses: SakshiNadagoudra/Reusable-github-workflows/.github/workflows/reusable-deploy.yml@main  # Reference the reusable workflow
  #   with:
  #     environment: sit
  
  # test-uat:
  #   name: Test in Uat
  #   needs: deploy-sit
  #   uses: SakshiNadagoudra/Reusable-github-workflows/.github/workflows/reusable-test.yml@main
  #   with:
  #     environment: uat

  # # Stage 3: Deploy to Development
  # deploy-uat:
  #   name: Deploy to Uat Environment
  #   needs: test-uat
  #   uses: SakshiNadagoudra/Reusable-github-workflows/.github/workflows/reusable-deploy.yml@main  # Reference the reusable workflow
  #   with:
  #     environment: uat
  
  # test-prod:
  #   name: Test in Prod
  #   needs: deploy-uat
  #   uses: SakshiNadagoudra/Reusable-github-workflows/.github/workflows/reusable-test.yml@main
  #   with:
  #     environment: prod

  # # Stage 4: Deploy to Production
  # deploy-Prod:
  #   name: Deploy to Production Environment
  #   needs: test-prod
  #   uses: SakshiNadagoudra/Reusable-github-workflows/.github/workflows/reusable-deploy.yml@main  # Reference the reusable workflow
  #   with:
  #     environment: prod