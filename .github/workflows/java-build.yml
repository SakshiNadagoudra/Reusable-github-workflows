name: Build and Deploy Java Application

on:
  push:
    branches:
      - feature-branch  # Replace with your target branch
    workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup GitHub CLI
        run: |
          echo "Setting up GitHub CLI"
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Trigger deployments
        env:
          GH_TOKEN: ${{ github.token }}
          REPO: ${{ github.repository }}
        run: |
            environments=("dev" "sit" "uat" "prod")
            
            for env in "${environments[@]}"; do
              echo "Starting deployment to $env environment"
              
              # Trigger deploy workflow and get run ID
              gh workflow run reusable-deploy.yml -f environment=$env --ref ${{ github.ref }}
              sleep 5  # Wait for workflow to start
              
              # Get the latest run ID and wait for completion
              until [ "$status" = "completed" ]; do
                run_info=$(gh api repos/$REPO/actions/runs --jq ".workflow_runs[] | select(.name == \"Reusable Deploy Workflow\") | select(.status != \"completed\") | {id, status}" | head -n 1)
                run_id=$(echo "$run_info" | grep -o '"id": [0-9]*' | cut -d' ' -f2)
                status=$(echo "$run_info" | grep -o '"status": "[^"]*"' | cut -d'"' -f4)
                
                if [ -n "$run_id" ]; then
                  echo "Waiting for deploy to $env (Run ID: $run_id)..."
                  sleep 10
                else
                  status="completed"
                fi
              done
              
              # Check final status
              conclusion=$(gh api repos/$REPO/actions/runs/$run_id --jq .conclusion)
              if [ "$conclusion" = "success" ]; then
                echo "✓ Deploy to $env completed successfully"
              else
                echo "✗ Deploy to $env failed"
                exit 1
              fi
              
              # Reset status for test workflow
              status=""
              
              # Trigger test workflow
              echo "Starting tests for $env environment"
              gh workflow run reusable-test.yml -f environment=$env --ref ${{ github.ref }}
              sleep 5
              
              # Wait for test workflow completion
              until [ "$status" = "completed" ]; do
                run_info=$(gh api repos/$REPO/actions/runs --jq ".workflow_runs[] | select(.name == \"Reusable Test Workflow\") | select(.status != \"completed\") | {id, status}" | head -n 1)
                run_id=$(echo "$run_info" | grep -o '"id": [0-9]*' | cut -d' ' -f2)
                status=$(echo "$run_info" | grep -o '"status": "[^"]*"' | cut -d'"' -f4)
                
                if [ -n "$run_id" ]; then
                  echo "Waiting for tests in $env (Run ID: $run_id)..."
                  sleep 10
                else
                  status="completed"
                fi
              done
              
              # Check final status
              conclusion=$(gh api repos/$REPO/actions/runs/$run_id --jq .conclusion)
              if [ "$conclusion" = "success" ]; then
                echo "✓ Tests for $env completed successfully"
              else
                echo "✗ Tests for $env failed"
                exit 1
              fi
              
              echo "----------------------------------------"
            done