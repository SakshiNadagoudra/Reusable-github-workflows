name: Build and Deploy Java Application

on:
  push:
    branches:
      - main  # Trigger on pushes to the main branch
  workflow_dispatch:  # Allow manual triggers

jobs:
  # Stage 1: Build
  build:
    name: Build Java Code
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: 'adopt'
          java-version: '11'

      - name: Build with Maven
        run: mvn clean install

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: target/*.jar
          
  # Step 2: Test
  test:
    name: Test Java Code
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: test  # Environment for approval
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Tests
        run: |
          mvn test | tee test-output.log
        id: test-step

      - name: Parse Test Results
        id: test-results
        run: |
          TOTAL=$(grep -oP '<testsuite .+? tests="\K\d+' target/surefire-reports/*.xml | paste -sd+ | bc)
          FAILED=$(grep -oP '<testsuite .+? failures="\K\d+' target/surefire-reports/*.xml | paste -sd+ | bc)
          SKIPPED=$(grep -oP '<testsuite .+? skipped="\K\d+' target/surefire-reports/*.xml | paste -sd+ | bc)
          echo "::set-output name=total::$TOTAL"
          echo "::set-output name=failed::$FAILED"
          echo "::set-output name=skipped::$SKIPPED"

      - name: Notify Manager with Test Results
        uses: actions/github-script@v6
        with:
          script: |
            const nodemailer = require('nodemailer');

            const transporter = nodemailer.createTransport({
              service: 'gmail', // or 'sendgrid' for SendGrid
              auth: {
                user: process.env.EMAIL_USERNAME,
                pass: process.env.EMAIL_PASSWORD
              }
            });

            const emailContent = `
            <h1>Approval Needed: Deployment to Test Environment</h1>
            <p>The following test results are available:</p>
            <ul>
              <li><b>Total Tests:</b> ${process.env.TOTAL_TESTS}</li>
              <li><b>Failed Tests:</b> ${process.env.FAILED_TESTS}</li>
              <li><b>Skipped Tests:</b> ${process.env.SKIPPED_TESTS}</li>
            </ul>
            <p>Click <a href="${process.env.RUN_URL}">here</a> to approve the deployment.</p>
            `;

            await transporter.sendMail({
              from: process.env.EMAIL_USERNAME,
              to: 'manager@example.com', // Replace with manager's email
              subject: 'Approval Needed: Deployment to Test Environment',
              html: emailContent
            });

          env:
            TOTAL_TESTS: ${{ steps.test-results.outputs.total }}
            FAILED_TESTS: ${{ steps.test-results.outputs.failed }}
            SKIPPED_TESTS: ${{ steps.test-results.outputs.skipped }}
            RUN_URL: ${{ github.event.workflow_run.html_url }}
            EMAIL_USERNAME: ${{ secrets.EMAIL_USERNAME }}
            EMAIL_PASSWORD: ${{ secrets.EMAIL_PASSWORD }}


  # Stage 3: Deploy to Development
  deploy-Dev:
    name: Deploy to Dev Environment
    needs: test
    uses: SakshiNadagoudra/Reusable-github-workflows/.github/workflows/reusable-deploy.yml@main  # Reference the reusable workflow
    with:
      environment: dev  # Pass the environment name to the reusable workflow

  # Stage 4: Deploy to Production
  deploy-Prod:
    name: Deploy to Production
    needs: deploy-Dev
    uses: SakshiNadagoudra/Reusable-github-workflows/.github/workflows/reusable-deploy.yml@main  # Reference the reusable workflow
    with:
      environment: production