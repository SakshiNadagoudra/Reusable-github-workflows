name: Build, Deploy, and Test Workflow

on:
  push:
    branches:
      - feature-branch
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      artifact-name: build-artifacts
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: '11'

      - name: Build with Maven
        run: |
          echo "Simulating Maven build..."
          # mvn clean install
          echo "Dummy build completed."

  deploy-and-test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup GitHub CLI
        run: |
          echo "Setting up GitHub CLI"
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Deploy and Test Sequentially with Approval
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          ENVIRONMENTS=("dev" "sit" "uat" "prod")
          for env in "${ENVIRONMENTS[@]}"; do
            echo "====================================="
            echo "Triggering Deploy workflow for $env"
            echo "====================================="
            
            # Trigger Deploy workflow without passing run_id
            deploy_output=$(gh workflow run reusable-deploy.yml --ref feature-branch -F environment=$env)
            echo "Deploy workflow triggered. Output:"
            echo "$deploy_output"

            # Extract deploy run_id from the deploy output
            deploy_run_id=$(echo "$deploy_output" | grep -oP '(?<=actions/runs/)\d+')
            if [ -z "$deploy_run_id" ]; then
              echo "Failed to extract deploy run_id. Exiting."
              exit 1
            fi

            echo "Deploy workflow triggered with run ID: $deploy_run_id"

            # Wait for Deploy workflow to complete (using the status of the deploy workflow)
            echo "Waiting for deploy workflow ($env) to complete..."
            gh run watch "$deploy_run_id" --exit-status

            # Check approval status for the environment
            if [ "$env" != "dev" ]; then
              echo "====================================="
              echo "Waiting for approval for $env"
              echo "====================================="
              while true; do
                approval_status=$(gh api repos/${{ github.repository }}/actions/runs/"$deploy_run_id"/approvals -q '.[0].status')
                if [ "$approval_status" == "approved" ]; then
                  echo "Approval granted for $env. Proceeding to test."
                  break
                elif [ "$approval_status" == "rejected" ]; then
                  echo "Approval for $env was rejected. Stopping workflow."
                  exit 1
                fi
                echo "Approval for $env is pending. Checking again in 30 seconds..."
                sleep 30  # Wait for 30 seconds before checking again
              done
            fi

            # Trigger Test workflow after approval for the current environment
            echo "====================================="
            echo "Triggering Test workflow for $env"
            echo "====================================="
            test_output=$(gh workflow run reusable-test.yml --ref feature-branch -F environment=$env)
            test_run_id=$(echo "$test_output" | grep -oP '(?<=actions/runs/)\d+')
            echo "Test workflow triggered. Output:"
            echo "$test_output"

            # Wait for the Test workflow to complete
            echo "Waiting for test workflow ($env) to complete..."
            gh run watch "$test_run_id" --exit-status
          done

