name: Build and Deploy Java Application

on:
  push:
    branches:
      - feature-branch  # Replace with your target branch
    workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup GitHub CLI
        run: |
          echo "Setting up GitHub CLI"
          sudo apt-get update
          sudo apt-get install -y gh

  
      - name: Deploy and Test Environments
        env:
            GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
            # List available workflows for debugging
            echo "Available workflows:"
            gh workflow list
        
            # Correctly fetch workflow IDs
            deploy_workflow_id=$(gh workflow list | grep "Reusable Deploy Workflow" | awk '{print $5}')
            test_workflow_id=$(gh workflow list | grep "Reusable Test Workflow" | awk '{print $5}')
        
            echo "Deploy Workflow ID: $deploy_workflow_id"
            echo "Test Workflow ID: $test_workflow_id"
        
            # Define environments
            environments=("dev" "sit" "uat" "prod")
        
            for env in "${environments[@]}"; do
              echo "Starting deployment to $env environment"
        
              # Trigger deploy workflow using workflow ID
              gh workflow run "$deploy_workflow_id" -f environment="$env" -r "feature-branch"
              sleep 10  # Wait for workflow to start
        
              # Get the run ID from the latest workflow run on the specified branch
              run_id=$(gh run list --workflow="$deploy_workflow_id" --branch="feature-branch" --limit 1 --json databaseId --jq '.[0].databaseId')
              echo "Deployment started with Run ID: $run_id"
        
              # Wait for deployment completion or approval
              while true; do
                run_status=$(gh run view "$run_id" --json status,conclusion -q '.status')
                if [ "$run_status" = "completed" ]; then
                  conclusion=$(gh run view "$run_id" --json conclusion -q '.conclusion')
                  if [ "$conclusion" = "success" ]; then
                    echo "✓ Deploy to $env completed successfully"
                    break
                  else
                    echo "✗ Deploy to $env failed or was cancelled"
                    exit 1
                  fi
                elif [ "$run_status" = "waiting" ]; then
                  echo "Waiting for environment approval in $env..."
                else
                  echo "Deployment in progress..."
                fi
                sleep 20
              done
        
              # Only proceed with tests if deployment was successful
              echo "Starting tests for $env environment"
              gh workflow run "$test_workflow_id" -f environment="$env" -r "feature-branch"
              sleep 10
        
              # Get the test run ID
              test_run_id=$(gh run list --workflow="$test_workflow_id" --branch="feature-branch" --limit 1 --json databaseId --jq '.[0].databaseId')
              echo "Test started with Run ID: $test_run_id"
        
              # Wait for test completion
              while true; do
                run_status=$(gh run view "$test_run_id" --json status,conclusion -q '.status')
                if [ "$run_status" = "completed" ]; then
                  conclusion=$(gh run view "$test_run_id" --json conclusion -q '.conclusion')
                  if [ "$conclusion" = "success" ]; then
                    echo "✓ Tests for $env completed successfully"
                    break
                  else
                    echo "✗ Tests for $env failed"
                    exit 1
                  fi
                fi
                echo "Tests in progress..."
                sleep 20
              done
        
              echo "----------------------------------------"
            done
        