name: Build and Deploy Java Application

on:
  push:
    branches:
      - feature-branch  # Replace with your target branch
    workflow_dispatch:

jobs:
  
  # run-on-merge:
  #   runs-on: ubuntu-latest
  #   if: contains(github.event.head_commit.message, 'Merge pull request')  # Check if the commit is a PR merge
  #   steps:
  #     - name: Run on PR merge
  #       run: echo "This workflow runs only when a pull request is merged."


  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup GitHub CLI
        run: |
          echo "Setting up GitHub CLI"
          sudo apt-get update
          sudo apt-get install -y gh
      - name: Deploy and Test Sequentially with Approval
        env:
          GH_TOKEN: ${{ github.token }}  # Set the GH_TOKEN environment variable
        run: |
          # Define environments
          ENVIRONMENTS=("dev" "sit" "prod")
          # Loop through each environment
          for env in "${ENVIRONMENTS[@]}"; do
            # Step 1: Trigger Deploy workflow for the current environment
            echo "====================================="
            echo "Triggering Deploy workflow for $env"
            echo "====================================="
            gh workflow run reusable-deploy.yml --ref feature-branch -F environment=$env
            echo "Waiting for deploy workflow ($env) to complete..."
            # Step 2: Wait for approval if environment is not 'dev'
            if [ "$env" != "dev" ]; then
              echo "====================================="
              echo "Waiting for manual approval for $env"
              echo "====================================="
              # GitHub will automatically pause here and wait for manual approval
              # based on protection rules set for the 'sit' and 'prod' environments
              # Monitor the approval status
              APPROVAL_STATUS="pending"
              while [ "$APPROVAL_STATUS" != "approved" ]; do
                echo "Checking approval status for $env..."
                # Check if approval has been given
                APPROVAL_STATUS=$(gh api /repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/approvals | jq -r '.[0].status')
                if [ "$APPROVAL_STATUS" == "rejected" ]; then
                  echo "Approval for $env was rejected. Stopping workflow."
                  exit 1
                fi
                sleep 10  # Check every 10 seconds
              done
              echo "Approval granted for $env."
            fi
            # Step 3: Trigger Test workflow for the current environment after approval
            echo "====================================="
            echo "Triggering Test workflow for $env"
            echo "====================================="
            gh workflow run reusable-test.yml --ref feature-branch -F environment=$env
            echo "Waiting for test workflow ($env) to complete..."
            sleep 30  
          done