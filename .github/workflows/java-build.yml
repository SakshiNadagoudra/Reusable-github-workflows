name: Build Java Application

on:
  push:
    branches:
      - feature-branch
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          distribution: adopt
          java-version: '11'

      - name: Build with Maven
        run: mvn clean install

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-artifacts
          path: target/*.jar

      - name: Output Run ID
        run: echo "run_id=${{ github.run_id }}" >> $GITHUB_ENV

  deploy-and-test:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Setup GitHub CLI
        run: |
          echo "Setting up GitHub CLI"
          sudo apt-get update
          sudo apt-get install -y gh

      - name: Deploy and Test Sequentially with Approval
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
            ENVIRONMENTS=("dev" "sit" "prod")
            for env in "${ENVIRONMENTS[@]}"; do
              echo "====================================="
              echo "Triggering Deploy workflow for $env"
              echo "====================================="
              
              # Trigger Deploy workflow and capture output
              deploy_output=$(gh workflow run reusable-deploy.yml --ref main -F environment=$env -F run_id=$GITHUB_RUN_ID)
              echo "Deploy workflow triggered. Output:"
              echo "$deploy_output"
              
              # Extract run_id using awk
              run_id=$(echo "$deploy_output" | awk -F'/actions/runs/' '{print $2}' | awk '{print $1}')
              if [ -z "$run_id" ]; then
                echo "Failed to extract run_id for deploy workflow. Exiting."
                exit 1
              fi
        
              echo "Triggered deploy workflow with run ID: $run_id"
        
              # Wait for Deploy workflow to complete
              echo "Waiting for deploy workflow ($env) to complete..."
              gh run watch "$run_id" --exit-status
        
              # Trigger Test workflow after deploy for the current environment
              if [ "$env" == "dev" ]; then
                echo "====================================="
                echo "Triggering Test workflow for $env"
                echo "====================================="
                test_output=$(gh workflow run reusable-test.yml --ref main -F environment=$env -F run_id=$run_id)
                echo "Test workflow triggered. Output:"
                echo "$test_output"
        
                # Extract test_run_id using awk
                test_run_id=$(echo "$test_output" | awk -F'/actions/runs/' '{print $2}' | awk '{print $1}')
                if [ -z "$test_run_id" ]; then
                  echo "Failed to extract test run_id. Exiting."
                  exit 1
                fi
        
                echo "Triggered test workflow with run ID: $test_run_id"
                echo "Waiting for Test workflow ($env) to complete..."
                gh run watch "$test_run_id" --exit-status
              fi
            done
        