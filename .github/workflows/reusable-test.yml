name: Reusable Test Workflow

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      run_id:   # This is added to receive the run_id of the deploy workflow
        required: true
        type: string
  workflow_dispatch:
    inputs:
      environment:
        description: "The environment to deploy to"
        required: true
        type: string

jobs:
  test:
    name: Test in ${{ inputs.environment }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Run Tests
        run: |
          echo "Running tests in ${{ inputs.environment }}"
          echo "This is a dummy test report for the POC." > test-report.txt

      - name: Upload Test Report
        uses: actions/upload-artifact@v3
        with:
          name: test-report
          path: test-report.txt

      - name: Notify Manager with Test Report and Approval Link
        uses: actions/github-script@v6
        with:
          script: |
            const repository = context.repo.repo;
            const runId = ${{ inputs.run_id }};  // Use the run_id from the input
            const environment = '${{ inputs.environment }}';  // Environment passed from workflow

            // Get the URL for the current test workflow run
            const workflowUrl = `https://github.com/${context.repo.owner}/${repository}/actions/runs/${runId}`;
            const artifactUrl = `https://github.com/${context.repo.owner}/${repository}/suites/${runId}/artifacts`;

            const subject = "Test Execution Complete - Approval Needed";
            const message = `
            **Subject:** ${subject}
            Hi there,
            Test execution is complete. Please review the test report:
            [Download Test Report](${artifactUrl})
            Workflow details: ${workflowUrl}
            To approve and proceed to the next environment, please visit the following approval link:
            [Approve Deployment](${workflowUrl})
            
            Thanks,
            GitHub-BMO
            `;

            // Print message to console (for debug)
            console.log(message);

            // Notify using GitHub API (e.g., comment on the commit)
            await github.rest.repos.createCommitComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              commit_sha: context.sha,
              body: message,
            });
